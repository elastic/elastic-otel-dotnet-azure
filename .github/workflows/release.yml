name: release

on:
  release:
    types: [published]
  push:
    branches:
      - main

permissions:
  contents: read

env:
  JOB_URL: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
  SLACK_CHANNEL: "#apm-agent-dotnet"
  IMAGE_NAME: "elastic-otel-collector-azure"

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      id-token: write
    env:
      DOCKER_IMAGE_NAME: "docker.elastic.co/observability/${{ env.IMAGE_NAME }}"
    steps:
      - uses: actions/checkout@v4
      - name: Bootstrap Action Workspace
        id: bootstrap
        uses: ./.github/actions/bootstrap

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@aa33708b10e362ff993539393ff100fa93ed6a27 # v3.5.0

      - name: Log in to the Elastic Container registry
        uses: docker/login-action@9780b0c442fbb1117ed29e0efdff1e18412f7567 # v3.3.0
        with:
          registry: ${{ secrets.ELASTIC_DOCKER_REGISTRY }}
          username: ${{ secrets.ELASTIC_DOCKER_USERNAME }}
          password: ${{ secrets.ELASTIC_DOCKER_PASSWORD }}

      - name: Extract metadata (tags, labels)
        id: docker-meta
        uses: docker/metadata-action@8e5442c4ef9f78752691e2d8f8d19755c6f78e81 # v5.5.1
        with:
          images: ${{ env.DOCKER_IMAGE_NAME }}
          flavor: |
            latest=auto
          tags: |
            # "1.2.3" and "latest" Docker tags on push of git tag "v1.2.3"
            type=semver,pattern={{version}},value=${{ steps.bootstrap.outputs.full-version }}
            # "edge" Docker tag on git push to default branch
            type=edge
          labels: |
            org.opencontainers.image.title=${{ env.IMAGE_NAME }}
            org.opencontainers.image.description=Elastic Distribution of OpenTelemetry Collector packaged for Azure Sidecar Containers
            org.opencontainers.image.vendor=Elastic

      - name: Build and Push Profiler Docker Image
        id: docker-push
        continue-on-error: true # continue for now until we see it working in action
        uses: docker/build-push-action@5176d81f87c23d6fc96624dfdbcd9f3830bbe445 # v6.5.0
        with:
          cache-from: type=gha
          cache-to: type=gha,mode=max
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.docker-meta.outputs.tags }}
          labels: ${{ steps.docker-meta.outputs.labels }}

      - name: Attest image
        uses: actions/attest-build-provenance@5e9cb68e95676991667494a6a4e59b8a2f13e1d0 # v1.3.3
        continue-on-error: true # continue for now until we see it working in action
        with:
          subject-name: ${{ env.DOCKER_IMAGE_NAME }}
          subject-digest: ${{ steps.docker-push.outputs.digest }}
          push-to-registry: true

      - if: ${{ success() && github.event_name == 'release' }}
        uses: elastic/oblt-actions/slack/send@v1
        with:
          bot-token: ${{ secrets.SLACK_BOT_TOKEN }}
          channel-id: ${{ env.SLACK_CHANNEL }}
          message: |
            :large_green_circle: [${{ github.repository }}] Release *${{ github.ref_name }}* published.
            Build: (<${{ env.JOB_URL }}|here>)
            Release URL: (<https://github.com/${{ github.repository }}/releases/tag/${{ github.ref_name }}|${{ github.ref_name }}>)

      - if: ${{ failure() && github.event_name == 'release' }}
        uses: elastic/oblt-actions/slack/send@v1
        with:
          bot-token: ${{ secrets.SLACK_BOT_TOKEN }}
          channel-id: ${{ env.SLACK_CHANNEL }}
          message: |
            :large_yellow_circle: [${{ github.repository }}] Release *${{ github.ref_name }}* could not be published.
            Build: (<${{ env.JOB_URL }}|here>)
